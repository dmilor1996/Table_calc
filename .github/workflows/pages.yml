name: Deploy ZIP (Next export) to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # имя репозитория как basePath (после слеша)
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find ZIP in repo root
        run: |
          ZIPFILE=$(ls *.zip 2>/dev/null | head -n1)
          if [ -z "$ZIPFILE" ]; then
            echo "No .zip found in repo root"; exit 1
          fi
          echo "ZIPFILE=$ZIPFILE" >> $GITHUB_ENV
          echo "Found: $ZIPFILE"

      - name: Unzip
        run: |
          rm -rf site out
          mkdir site
          unzip -q "$ZIPFILE" -d site

      - name: Show folder tree (debug)
        run: |
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y tree >/dev/null 2>&1 || true
          echo "=== TREE site (2 levels) ==="
          tree -a -L 2 site || (echo "tree not available"; ls -laR site | head -n 400)

      - name: Try to find package.json (any depth)
        id: findpkg
        shell: bash
        run: |
          PKG_PATH=$(find site -maxdepth 5 -name package.json -not -path "*/node_modules/*" | head -n1 || true)
          if [ -n "$PKG_PATH" ]; then
            APP_DIR=$(dirname "$PKG_PATH")
            echo "APP_DIR=$APP_DIR" >> $GITHUB_ENV
            echo "Found package.json in: $APP_DIR"
          else
            echo "No package.json found — will deploy static files."
          fi

      # Если нашли package.json — подменим/создадим next.config.mjs с нужными опциями
      - name: Inject Next config for static export
        if: ${{ env.APP_DIR }}
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        run: |
          BASE="/${{ env.REPO_NAME }}"
          cat > next.config.mjs <<'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            trailingSlash: true,
            images: { unoptimized: true },
            // на GitHub Pages сайт лежит по подпути репозитория
            basePath: process.env.NEXT_BASE_PATH,
            assetPrefix: process.env.NEXT_BASE_PATH,
          };
          export default nextConfig;
          EOF
          echo "NEXT_BASE_PATH=$BASE" >> $GITHUB_ENV
          echo "Wrote next.config.mjs with basePath=${BASE}"

      - name: Setup Node (only if package.json found)
        if: ${{ env.APP_DIR }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps & build/export (Next.js)
        if: ${{ env.APP_DIR }}
        working-directory: ${{ env.APP_DIR }}
        env:
          NEXT_BASE_PATH: /${{ env.REPO_NAME }}
        shell: bash
        run: |
          set -e
          if [ -f pnpm-lock.yaml ]; then
            npm i -g pnpm
            pnpm install --frozen-lockfile || pnpm install
            pnpm run build
            pnpm run export
          elif [ -f yarn.lock ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install
            yarn build
            yarn export
          else
            npm ci || npm i
            npm run build
            npm run export
          fi
          mkdir -p "$GITHUB_WORKSPACE/out"
          cp -r out/* "$GITHUB_WORKSPACE/out/"

      # Если package.json не нашли — публикуем как есть (плюс префикс путей)
      - name: Fallback to static files
        if: ${{ !env.APP_DIR }}
        shell: bash
        run: |
          STATIC_DIR=$(find site -maxdepth 5 -name index.html -printf '%h\n' | head -n1 || true)
          mkdir -p out
          if [ -n "$STATIC_DIR" ]; then
            cp -r "$STATIC_DIR"/* out/
          else
            cp -r site/* out/ || true
          fi

          # Добавим префикс /<repo>/ ко всем абсолютным путям
          BASE="/${{ env.REPO_NAME }}/"
          find out -type f -name "*.html" -print0 | xargs -0 sed -i \
            -e "s|href=\"/|href=\"${BASE}|g" \
            -e "s|src=\"/|src=\"${BASE}|g"

          # SPA 404 → index
          if [ -f out/index.html ]; then
            cp out/index.html out/404.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
